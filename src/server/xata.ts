// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "cashAccount",
    columns: [
      { name: "name", type: "string" },
      { name: "baseline", type: "float" },
      { name: "keeperId", type: "string" },
    ],
  },
  {
    name: "debtAccount",
    columns: [
      { name: "name", type: "string" },
      { name: "baseline", type: "float" },
      { name: "keeperId", type: "string" },
    ],
  },
  {
    name: "keeper",
    columns: [
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "cashAccountIds", type: "multiple" },
      { name: "debtAccountIds", type: "multiple" },
      { name: "userId", type: "string" },
    ],
  },
  {
    name: "budget",
    columns: [
      { name: "name", type: "string" },
      { name: "baseline", type: "float" },
      { name: "startDate", type: "datetime" },
      { name: "endDate", type: "datetime" },
      { name: "keeperId", type: "string" },
    ],
  },
  {
    name: "section",
    columns: [
      { name: "name", type: "string" },
      { name: "baseline", type: "float" },
      { name: "budgetId", type: "string" },
    ],
  },
  {
    name: "expense",
    columns: [
      { name: "budgetId", type: "string" },
      { name: "transactor", type: "string" },
      { name: "amount", type: "float" },
      { name: "verified", type: "bool" },
      { name: "date", type: "datetime" },
    ],
  },
  {
    name: "transaction",
    columns: [
      { name: "transactor", type: "string" },
      { name: "amount", type: "float" },
      { name: "verified", type: "bool" },
      { name: "date", type: "datetime" },
      { name: "cashAccoutId", type: "string" },
      { name: "debtAccountId", type: "string" },
      { name: "sectionId", type: "string" },
    ],
  },
  {
    name: "user",
    columns: [
      { name: "email", type: "email" },
      { name: "password", type: "string" },
    ],
  },
  {
    name: "session",
    columns: [
      { name: "expirationDate", type: "datetime" },
      { name: "userId", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type CashAccount = InferredTypes["cashAccount"];
export type CashAccountRecord = CashAccount & XataRecord;

export type DebtAccount = InferredTypes["debtAccount"];
export type DebtAccountRecord = DebtAccount & XataRecord;

export type Keeper = InferredTypes["keeper"];
export type KeeperRecord = Keeper & XataRecord;

export type Budget = InferredTypes["budget"];
export type BudgetRecord = Budget & XataRecord;

export type Section = InferredTypes["section"];
export type SectionRecord = Section & XataRecord;

export type Expense = InferredTypes["expense"];
export type ExpenseRecord = Expense & XataRecord;

export type Transaction = InferredTypes["transaction"];
export type TransactionRecord = Transaction & XataRecord;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Session = InferredTypes["session"];
export type SessionRecord = Session & XataRecord;

export type DatabaseSchema = {
  cashAccount: CashAccountRecord;
  debtAccount: DebtAccountRecord;
  keeper: KeeperRecord;
  budget: BudgetRecord;
  section: SectionRecord;
  expense: ExpenseRecord;
  transaction: TransactionRecord;
  user: UserRecord;
  session: SessionRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://main-sv67m5.us-west-2.xata.sh/db/budget-keeper",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
